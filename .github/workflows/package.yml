name: CI - Package JAR

on:
  workflow_dispatch: {}     # manual trigger
  push:
    branches: [ "main" ]    # or only after merges to main

permissions:
  contents: read
  id-token: write

jobs:
  package:
    runs-on: ubuntu-latest

    concurrency:
      group: pkg-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: temurin
          cache: maven

      # Package jar for docker to create image
      - name: Package JAR
        run: mvn -B package -DskipTests

      # Configure AWS Credentials
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      # Login to ECR
      - name: Login to AWS ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build and push docker image
      - name: Build and Push Docker Image
        id: build
        run: |
          IMAGE="${{ steps.ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}"
          TAG="${{ github.sha }}"
          docker build -t "$IMAGE:$TAG" .
          docker push "$IMAGE:$TAG"
          DIGEST=$(aws ecr describe-images --repository-name "${{ vars.ECR_REPOSITORY }}" --image-ids imageTag="$TAG" --query 'imageDetails[0].imageDigest' --output text)
          echo "image_ref=$IMAGE@$DIGEST" >> $GITHUB_OUTPUT

      # Save the image digest as an artifact
      - name: Save image digest
        run: echo "${{ steps.build.outputs.image_ref }}" > image.txt

      # Upload image digest artifact
      - name: Upload image digest artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-ref
          path: image.txt

