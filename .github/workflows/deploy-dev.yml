name: Deploy to Dev

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}   # from 'dev' env
          aws-region: ${{ vars.AWS_REGION }}            # env/repo variable

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Resolve image digest from ECR (by commit SHA tag)
        id: image
        shell: bash
        run: |
          IMAGE="${{ steps.ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}"
          TAG="${{ github.sha }}"
          DIGEST=$(aws ecr describe-images \
            --repository-name "${{ vars.ECR_REPOSITORY }}" \
            --image-ids imageTag="$TAG" \
            --query 'imageDetails[0].imageDigest' -o text)
          if [ -z "$DIGEST" ] || [ "$DIGEST" = "None" ]; then
            echo "No image found in ECR for tag $TAG"; exit 1
          fi
          echo "ref=$IMAGE@$DIGEST" >> "$GITHUB_OUTPUT"

      - name: Render task definition (swap image)
        id: render
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-taskdef.json
          container-name: ${{ vars.CONTAINER_NAME }}
          image: ${{ steps.image.outputs.ref }}

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render.outputs.task-definition }}
          service: ${{ vars.ECS_SERVICE }}
          cluster: ${{ vars.ECS_CLUSTER }}
          wait-for-service-stability: true
